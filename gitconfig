[alias]
    st = status
    lg = log --graph --all --abbrev-commit
    lt = !git lg -15
    co = checkout
    dif = diff
    dc = diff --cached
    ci = commit
    aap = add . -p
    unmerged = branch --no-merge
    r = remote -v
    pr = pull-request
    om = !git diff --name-only | uniq | xargs -o vim
    ff = merge --ff-only
    yesterday = log --graph --all --abbrev-commit --since=yesterday --before=0am
    pr = !open "https://github.com/$(git remote get-url origin | sed -n 's/^.*:\\(.*\\)\\.git$/\\1/p')/compare/$(git rev-parse --abbrev-ref HEAD)?expand=1"

[format]
    pretty = format:%C(red)%h%C(reset) -%C(yellow)%d%C(reset) %s %C(green)(%ci) %C(bold blue)<%an>%Creset

[color]
    diff = true
    status = true
    branch = auto

[color "branch"]
    upstream = bold blue

[merge]
    tool = vimdiff

[core]
    pager = less -XFRS -x2

[push]
    default = current

[merge]
	conflictstyle = diff3

; [rerere]
	; enabled = 1

[fetch]
  prune = true

;  fsckobjects = true

; [transfer]
;   fsckobjects = true

; [receive]
;   fsckObjects = true

[merge "railsschema"]
	name = newer Rails schema version
	driver = "ruby -e '\n\
		system %(git), %(merge-file), %(--marker-size=%L), %(%A), %(%O), %(%B)\n\
		b = File.read(%(%A))\n\
		b.sub!(/^<+ .*\\nActiveRecord::Schema\\.define.:version => (\\d+). do\\n=+\\nActiveRecord::Schema\\.define.:version => (\\d+). do\\n>+ .*/) do\n\
		  %(ActiveRecord::Schema.define(:version => #{[$1, $2].max}) do)\n\
		end\n\
		File.open(%(%A), %(w)) {|f| f.write(b)}\n\
		exit 1 if b.include?(%(<)*%L)'"
