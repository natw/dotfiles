; vim: ft=gitconfig

[include]
  path = ~/.gitconfig.local

[user]
  name = Nat Williams
  email = nat.williams@gmail.com

[includeIf "gitdir:~/work/**"]
  path = config.kin

[includeIf "hasconfig:remote.*.url:git@github.com:kin/*"]
  path = config.kin

[alias]
  st = status
  lg = log --graph --all --abbrev-commit
  ; lg = log --graph --all --abbrev-commit --perl-regexp --author='^((?!(kinrobot|root)).*)$'
  lt = !git lg -15
  co = checkout
  dif = diff
  dc = diff --cached
  ci = commit
  aap = add . -p
  unmerged = branch --no-merge
  r = remote -v
  om = !git diff --name-only | uniq | xargs -o nvim
  ff = merge --ff-only
  yesterday = log --graph --all --abbrev-commit --since=yesterday --before=0am
  pr = !open "https://github.com/$(git remote get-url origin | sed -n 's/^.*:\\(.*\\)\\.git$/\\1/p')/compare/$(git rev-parse --abbrev-ref HEAD)?expand=1"
  burn = restore --staged --worktree
  merged = "!git branch -l --format='%(refname:short)' | grep -v -e '^production$' -e '^master$' -e '^main$' | while read branch; do [ -z \"$(git diff origin/HEAD...${branch})\" ] && echo \"${branch}\"; done"
  delete-squashed = "!f() { local targetBranch=${1:-master} && git checkout -q $targetBranch && git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d && git for-each-ref refs/heads/ \"--format=%(refname:short)\" | while read branch; do mergeBase=$(git merge-base $targetBranch $branch) && [[ $(git cherry $targetBranch $(git commit-tree $(git rev-parse $branch^{tree}) -p $mergeBase -m _)) == \"-\"* ]] && git branch -D $branch; done; }; f"
  orphans = "!git branch --format '%(refname:short) %(upstream:track)' | awk '/\\[gone\\]/ { print $1 }'"
  diffn = diff --no-ext-diff
  difn = diffn
  dcn = diff --cached --no-ext-diff
  squash = "!f() { local t=${1:-master} && git rebase -i $(git merge-base --fork-point $t); }; f"

[format]
  pretty = format:%C(red)%h%C(reset) -%C(yellow)%d%C(reset) %s %C(green)(%ci) %C(bold blue)<%an>%Creset

[url "ssh://git@github.com/"]
  insteadOf = https://github.com/

[pull]
  ff = only
  rebase = false

[color]
  diff = true
  status = true
  branch = auto

[color "branch"]
  upstream = bold blue

[init]
  defaultBranch = main

[diff]
  external = difft
  algorithm = histogram
  ; algorithm = patience
  colorMoved = default
  renames = copies
  word-diff = color

[merge]
  tool = nvimdiff
  conflictstyle = zdiff3

[core]
  pager = less -XFRS -x2
  excludesFile = "~/.gitignore"
  ; fsmonitor = true

[push]
  default = current
  autoSetupRemote = true

[rerere]
  enabled = true

[fetch]
  prune = true
  prunetags = true
  fsckobjects = true

[transfer]
  fsckobjects = true

[receive]
  fsckObjects = true

; [net]
;   git-fetch-with-cli = true

[tag]
  sort = version:refname

[branch]
  ; sort = version:refname
  sort = -committerdate

; [column]
;   branch = auto
;   tag = auto

[commit]
  verbose = true

[log]
  date = local
